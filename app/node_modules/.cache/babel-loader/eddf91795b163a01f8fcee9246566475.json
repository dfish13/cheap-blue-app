{"ast":null,"code":"var _jsxFileName = \"/home/duncanfish/git/cheap-blue-app/app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Chessboard from 'chessboardjsx';\nimport Chess from 'chess.js';\nimport { useEffect, useState, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, PlayAsButton } from './StyledComponents';\nimport PerftUtil from './PerftUtil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios');\n\nclass NormalGame extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fen: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n      squareStyles: {},\n      pieceSquare: '',\n      side: 'white'\n    };\n\n    this.onDrop = ({\n      sourceSquare,\n      targetSquare\n    }) => {\n      let move = this.game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q'\n      });\n      if (move === null) return;\n      this.setState({\n        fen: this.game.fen()\n      });\n      this.makeEngineMove();\n    };\n\n    this.onSquareClick = square => {\n      this.setState({\n        squareStyles: {\n          [square]: {\n            backgroundColor: 'Turquoise'\n          }\n        },\n        pieceSquare: square\n      });\n      let move = this.game.move({\n        from: this.state.pieceSquare,\n        to: square,\n        promotion: 'q'\n      }); // illegal move\n\n      if (move === null) return;\n      this.setState({\n        fen: this.game.fen()\n      });\n      this.makeEngineMove();\n    };\n\n    this.makeEngineMove = () => {\n      axios.post('/move', {\n        fen: this.game.fen()\n      }).then(res => {\n        if (res.data === \"None\") {\n          console.log('No legal moves.');\n          return;\n        } // Setting sloppy to true allows it to parse cheap blue's non standard move notation.\n\n\n        this.game.move(res.data, {\n          sloppy: true\n        });\n        this.setState({\n          fen: this.game.fen()\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.takeBack = () => {\n      let move = this.game.undo();\n      if (move === null) return;\n      this.setState({\n        fen: this.game.fen()\n      });\n    };\n\n    this.pickSide = color => {\n      this.setState({\n        side: color\n      });\n    };\n\n    this.getFenFromChild = fen => {\n      const test = this.game.validate_fen(fen);\n\n      if (test.valid) {\n        this.game.load(fen);\n        this.setState({\n          fen: this.game.fen()\n        });\n      } else console.log(test.error);\n    };\n\n    this.getFen = () => {\n      return this.game.fen();\n    };\n  }\n\n  componentDidMount() {\n    this.game = new Chess();\n  }\n\n  render() {\n    const {\n      fen,\n      squareStyles,\n      side\n    } = this.state;\n    return this.props.children({\n      makeEngineMove: this.makeEngineMove,\n      position: fen,\n      onDrop: this.onDrop,\n      onSquareClick: this.onSquareClick,\n      squareStyles,\n      takeBack: this.takeBack,\n      pickSide: this.pickSide,\n      passFenUp: this.getFenFromChild,\n      side: side\n    });\n  }\n\n}\n\nNormalGame.propTypes = {\n  children: PropTypes.func\n};\n\nconst FenBox = ({\n  fen,\n  passFenUp\n}) => {\n  _s();\n\n  const [fenString, setFenString] = useState(fen); // Because fen never changes after component is created this effect is only performed once.\n\n  useEffect(() => setFenString(fen), [fen]);\n\n  const loadFen = () => {\n    passFenUp(fenString);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadFen,\n      children: \"Load FEN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      cols: fenString.length + 1,\n      value: fenString,\n      onChange: e => {\n        setFenString(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FenBox, \"3U5I4rJl6cogXR7CglpE9zZfCNA=\");\n\n_c = FenBox;\n\nconst NormalGameBoard = ({\n  admin\n}) => {\n  return /*#__PURE__*/_jsxDEV(NormalGame, {\n    children: ({\n      makeEngineMove,\n      position,\n      onDrop,\n      onSquareClick,\n      squareStyles,\n      takeBack,\n      pickSide,\n      passFenUp,\n      side\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: takeBack,\n        children: \" Take Back \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), admin && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: makeEngineMove,\n        children: \" Engine Move \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(PlayAsButton, {\n        onClick: () => pickSide('white'),\n        children: \"Play White\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PlayAsButton, {\n        onClick: () => pickSide('black'),\n        black: true,\n        children: \"Play Black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n        calcWidth: ({\n          screenWidth\n        }) => screenWidth < 500 ? 350 : 480,\n        id: \"normalGame\",\n        position: position,\n        onDrop: onDrop,\n        boardStyle: {\n          borderRadius: '5px',\n          boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n        } // roughSquare={roughSquare}\n        ,\n        onSquareClick: onSquareClick,\n        squareStyles: squareStyles,\n        lightSquareStyle: {\n          backgroundColor: \"Cornsilk\"\n        },\n        darkSquareStyle: {\n          backgroundColor: \"RoyalBlue\"\n        },\n        orientation: side\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), admin && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(FenBox, {\n          fen: position,\n          passFenUp: passFenUp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(PerftUtil, {\n          fen: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = NormalGameBoard;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(NormalGameBoard, {\n      admin: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"FenBox\");\n$RefreshReg$(_c2, \"NormalGameBoard\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/duncanfish/git/cheap-blue-app/app/src/App.js"],"names":["Chessboard","Chess","useEffect","useState","Component","PropTypes","Button","PlayAsButton","PerftUtil","axios","require","NormalGame","state","fen","squareStyles","pieceSquare","side","onDrop","sourceSquare","targetSquare","move","game","from","to","promotion","setState","makeEngineMove","onSquareClick","square","backgroundColor","post","then","res","data","console","log","sloppy","catch","err","takeBack","undo","pickSide","color","getFenFromChild","test","validate_fen","valid","load","error","getFen","componentDidMount","render","props","children","position","passFenUp","propTypes","func","FenBox","fenString","setFenString","loadFen","length","e","target","value","NormalGameBoard","admin","screenWidth","borderRadius","boxShadow","App"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,eAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,EAA6BC,SAA7B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAAQC,MAAR,EAAgBC,YAAhB,QAAmC,oBAAnC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAGjCQ,KAHiC,GAGzB;AACNC,MAAAA,GAAG,EAAE,0DADC;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,IAAI,EAAE;AAJA,KAHyB;;AAAA,SAcjCC,MAdiC,GAcxB,CAAC;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,KAAD,KAAoC;AAC3C,UAAIC,IAAI,GAAG,KAAKC,IAAL,CAAUD,IAAV,CAAe;AACxBE,QAAAA,IAAI,EAAEJ,YADkB;AAExBK,QAAAA,EAAE,EAAEJ,YAFoB;AAGxBK,QAAAA,SAAS,EAAE;AAHa,OAAf,CAAX;AAMA,UAAIJ,IAAI,KAAK,IAAb,EAAmB;AAEnB,WAAKK,QAAL,CAAc;AAACZ,QAAAA,GAAG,EAAE,KAAKQ,IAAL,CAAUR,GAAV;AAAN,OAAd;AACA,WAAKa,cAAL;AACD,KAzBgC;;AAAA,SA2BjCC,aA3BiC,GA2BjBC,MAAM,IAAI;AACxB,WAAKH,QAAL,CAAc;AACZX,QAAAA,YAAY,EAAE;AAAE,WAACc,MAAD,GAAU;AAAEC,YAAAA,eAAe,EAAE;AAAnB;AAAZ,SADF;AAEZd,QAAAA,WAAW,EAAEa;AAFD,OAAd;AAKA,UAAIR,IAAI,GAAG,KAAKC,IAAL,CAAUD,IAAV,CAAe;AACxBE,QAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWG,WADO;AAExBQ,QAAAA,EAAE,EAAEK,MAFoB;AAGxBJ,QAAAA,SAAS,EAAE;AAHa,OAAf,CAAX,CANwB,CAYxB;;AACA,UAAIJ,IAAI,KAAK,IAAb,EAAmB;AAEnB,WAAKK,QAAL,CAAc;AAAEZ,QAAAA,GAAG,EAAE,KAAKQ,IAAL,CAAUR,GAAV;AAAP,OAAd;AACA,WAAKa,cAAL;AACD,KA5CgC;;AAAA,SA8CjCA,cA9CiC,GA8ChB,MAAM;AACrBjB,MAAAA,KAAK,CAACqB,IAAN,CAAW,OAAX,EAAoB;AAAEjB,QAAAA,GAAG,EAAE,KAAKQ,IAAL,CAAUR,GAAV;AAAP,OAApB,EACCkB,IADD,CACOC,GAAD,IAAS;AACb,YAAIA,GAAG,CAACC,IAAJ,KAAa,MAAjB,EACA;AACEC,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA;AACD,SALY,CAOb;;;AACA,aAAKd,IAAL,CAAUD,IAAV,CAAeY,GAAG,CAACC,IAAnB,EAAyB;AAACG,UAAAA,MAAM,EAAE;AAAT,SAAzB;AACA,aAAKX,QAAL,CAAc;AAAEZ,UAAAA,GAAG,EAAE,KAAKQ,IAAL,CAAUR,GAAV;AAAP,SAAd;AACD,OAXD,EAYCwB,KAZD,CAYQC,GAAD,IAASJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAZhB;AAaD,KA5DgC;;AAAA,SA8DjCC,QA9DiC,GA8DtB,MAAM;AACf,UAAInB,IAAI,GAAG,KAAKC,IAAL,CAAUmB,IAAV,EAAX;AACA,UAAIpB,IAAI,KAAK,IAAb,EAAmB;AAEnB,WAAKK,QAAL,CAAc;AAAEZ,QAAAA,GAAG,EAAE,KAAKQ,IAAL,CAAUR,GAAV;AAAP,OAAd;AACD,KAnEgC;;AAAA,SAqEjC4B,QArEiC,GAqErBC,KAAD,IAAW;AACpB,WAAKjB,QAAL,CAAc;AAACT,QAAAA,IAAI,EAAE0B;AAAP,OAAd;AACD,KAvEgC;;AAAA,SAyEjCC,eAzEiC,GAyEd9B,GAAD,IAAS;AACzB,YAAM+B,IAAI,GAAG,KAAKvB,IAAL,CAAUwB,YAAV,CAAuBhC,GAAvB,CAAb;;AACA,UAAI+B,IAAI,CAACE,KAAT,EACA;AACE,aAAKzB,IAAL,CAAU0B,IAAV,CAAelC,GAAf;AACA,aAAKY,QAAL,CAAc;AAAEZ,UAAAA,GAAG,EAAE,KAAKQ,IAAL,CAAUR,GAAV;AAAP,SAAd;AACD,OAJD,MAMEqB,OAAO,CAACC,GAAR,CAAYS,IAAI,CAACI,KAAjB;AACH,KAlFgC;;AAAA,SAoFjCC,MApFiC,GAoFxB,MAAM;AACb,aAAO,KAAK5B,IAAL,CAAUR,GAAV,EAAP;AACD,KAtFgC;AAAA;;AAUjCqC,EAAAA,iBAAiB,GAAG;AAClB,SAAK7B,IAAL,GAAY,IAAIpB,KAAJ,EAAZ;AACD;;AA4EDkD,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtC,MAAAA,GAAF;AAAOC,MAAAA,YAAP;AAAqBE,MAAAA;AAArB,QAA6B,KAAKJ,KAAxC;AACA,WAAO,KAAKwC,KAAL,CAAWC,QAAX,CAAoB;AACzB3B,MAAAA,cAAc,EAAE,KAAKA,cADI;AAEzB4B,MAAAA,QAAQ,EAAEzC,GAFe;AAGzBI,MAAAA,MAAM,EAAE,KAAKA,MAHY;AAIzBU,MAAAA,aAAa,EAAE,KAAKA,aAJK;AAKzBb,MAAAA,YALyB;AAMzByB,MAAAA,QAAQ,EAAE,KAAKA,QANU;AAOzBE,MAAAA,QAAQ,EAAE,KAAKA,QAPU;AAQzBc,MAAAA,SAAS,EAAE,KAAKZ,eARS;AASzB3B,MAAAA,IAAI,EAAEA;AATmB,KAApB,CAAP;AAWD;;AArGgC;;AAA7BL,U,CACG6C,S,GAAY;AAAEH,EAAAA,QAAQ,EAAEhD,SAAS,CAACoD;AAAtB,C;;AAuGrB,MAAMC,MAAM,GAAG,CAAC;AAAC7C,EAAAA,GAAD;AAAM0C,EAAAA;AAAN,CAAD,KAAsB;AAAA;;AAEnC,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BzD,QAAQ,CAACU,GAAD,CAA1C,CAFmC,CAKnC;;AACAX,EAAAA,SAAS,CAAC,MAAM0D,YAAY,CAAC/C,GAAD,CAAnB,EAA0B,CAACA,GAAD,CAA1B,CAAT;;AAEA,QAAMgD,OAAO,GAAG,MAAM;AACpBN,IAAAA,SAAS,CAACI,SAAD,CAAT;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAU,MAAA,IAAI,EAAEF,SAAS,CAACG,MAAV,GAAmB,CAAnC;AAAsC,MAAA,KAAK,EAAEH,SAA7C;AAAwD,MAAA,QAAQ,EAAGI,CAAD,IAAO;AAACH,QAAAA,YAAY,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAA6B;AAAvG;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlBD;;GAAMP,M;;KAAAA,M;;AAqBN,MAAMQ,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AAEnC,sBACE,QAAC,UAAD;AAAA,cACK,CAAC;AAAEzC,MAAAA,cAAF;AAAkB4B,MAAAA,QAAlB;AAA4BrC,MAAAA,MAA5B;AAAoCU,MAAAA,aAApC;AAAmDb,MAAAA,YAAnD;AAAiEyB,MAAAA,QAAjE;AAA2EE,MAAAA,QAA3E;AAAqFc,MAAAA,SAArF;AAAgGvC,MAAAA;AAAhG,KAAD,kBACC;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEuB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEG4B,KAAK,iBAAI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEzC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFZ,eAGE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAMe,QAAQ,CAAC,OAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAE,MAAMA,QAAQ,CAAC,OAAD,CAArC;AAAgD,QAAA,KAAK,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,UAAD;AACA,QAAA,SAAS,EAAE,CAAC;AAAE2B,UAAAA;AAAF,SAAD,KAAsBA,WAAW,GAAG,GAAd,GAAoB,GAApB,GAA0B,GAD3D;AAEA,QAAA,EAAE,EAAC,YAFH;AAGA,QAAA,QAAQ,EAAEd,QAHV;AAIA,QAAA,MAAM,EAAErC,MAJR;AAKA,QAAA,UAAU,EAAE;AACVoD,UAAAA,YAAY,EAAE,KADJ;AAEVC,UAAAA,SAAS,EAAG;AAFF,SALZ,CASA;AATA;AAUA,QAAA,aAAa,EAAE3C,aAVf;AAWA,QAAA,YAAY,EAAEb,YAXd;AAYA,QAAA,gBAAgB,EAAE;AAAEe,UAAAA,eAAe,EAAE;AAAnB,SAZlB;AAaA,QAAA,eAAe,EAAE;AAAEA,UAAAA,eAAe,EAAE;AAAnB,SAbjB;AAcA,QAAA,WAAW,EAAEb;AAdb;AAAA;AAAA;AAAA;AAAA,cALF,eAqBE;AAAA;AAAA;AAAA;AAAA,cArBF,EAsBGmD,KAAK,iBACJ;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAEb,QAAb;AAAuB,UAAA,SAAS,EAAEC;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,GAAG,EAAED;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFN;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CArCD;;MAAMY,e;;AAuCN,SAASK,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACI,QAAC,eAAD;AAAiB,MAAA,KAAK;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;MANQA,G;AAQT,eAAeA,GAAf","sourcesContent":["import Chessboard from 'chessboardjsx';\nimport Chess from 'chess.js';\nimport {useEffect, useState, Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport {Button, PlayAsButton} from './StyledComponents';\nimport PerftUtil from './PerftUtil';\n\nconst axios = require('axios');\n\nclass NormalGame extends Component {\n  static propTypes = { children: PropTypes.func };\n\n  state = {\n    fen: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1',\n    squareStyles: {},\n    pieceSquare: '',\n    side: 'white'\n  };\n\n  componentDidMount() {\n    this.game = new Chess();\n  }\n\n  onDrop = ({ sourceSquare, targetSquare }) => {\n    let move = this.game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: 'q'\n    });\n\n    if (move === null) return;\n\n    this.setState({fen: this.game.fen()});\n    this.makeEngineMove()\n  };\n\n  onSquareClick = square => {\n    this.setState({\n      squareStyles: { [square]: { backgroundColor: 'Turquoise' } },\n      pieceSquare: square\n    });\n\n    let move = this.game.move({\n      from: this.state.pieceSquare,\n      to: square,\n      promotion: 'q'\n    });\n\n    // illegal move\n    if (move === null) return;\n\n    this.setState({ fen: this.game.fen() });\n    this.makeEngineMove()\n  };\n\n  makeEngineMove = () => {\n    axios.post('/move', { fen: this.game.fen()})\n    .then((res) => {\n      if (res.data === \"None\")\n      {\n        console.log('No legal moves.')\n        return;\n      }\n\n      // Setting sloppy to true allows it to parse cheap blue's non standard move notation.\n      this.game.move(res.data, {sloppy: true});\n      this.setState({ fen: this.game.fen() });\n    })\n    .catch((err) => console.log(err));\n  }\n\n  takeBack = () => {\n    let move = this.game.undo();\n    if (move === null) return;\n\n    this.setState({ fen: this.game.fen() });\n  }\n\n  pickSide = (color) => {\n    this.setState({side: color});\n  }\n\n  getFenFromChild = (fen) => {\n    const test = this.game.validate_fen(fen)\n    if (test.valid)\n    {\n      this.game.load(fen)\n      this.setState({ fen: this.game.fen() })\n    }\n    else\n      console.log(test.error)\n  }\n\n  getFen = () => {\n    return this.game.fen();\n  }\n\n  render() {\n    const { fen, squareStyles, side} = this.state;\n    return this.props.children({\n      makeEngineMove: this.makeEngineMove,\n      position: fen,\n      onDrop: this.onDrop,\n      onSquareClick: this.onSquareClick,\n      squareStyles,\n      takeBack: this.takeBack,\n      pickSide: this.pickSide,\n      passFenUp: this.getFenFromChild,\n      side: side\n    });\n  }\n}\n\nconst FenBox = ({fen, passFenUp}) => {\n\n  const [fenString, setFenString] = useState(fen)\n\n\n  // Because fen never changes after component is created this effect is only performed once.\n  useEffect(() => setFenString(fen), [fen])\n\n  const loadFen = () => {\n    passFenUp(fenString)\n  }\n\n  return (\n    <div>\n      <button onClick={loadFen}>Load FEN</button>\n      <textarea cols={fenString.length + 1} value={fenString} onChange={(e) => {setFenString(e.target.value)}}/>\n    </div>\n  )\n}\n\n\nconst NormalGameBoard = ({admin}) => {\n\n  return (\n    <NormalGame>\n        {({ makeEngineMove, position, onDrop, onSquareClick, squareStyles, takeBack, pickSide, passFenUp, side }) => (\n          <div>\n            <Button onClick={takeBack}> Take Back </Button>\n            {admin && <Button onClick={makeEngineMove}> Engine Move </Button>}\n            <PlayAsButton onClick={() => pickSide('white')}>Play White</PlayAsButton>\n            <PlayAsButton onClick={() => pickSide('black')} black>Play Black</PlayAsButton>\n            <Chessboard\n            calcWidth={({ screenWidth }) => (screenWidth < 500 ? 350 : 480)}\n            id=\"normalGame\"\n            position={position}\n            onDrop={onDrop}\n            boardStyle={{\n              borderRadius: '5px',\n              boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`\n            }}\n            // roughSquare={roughSquare}\n            onSquareClick={onSquareClick}\n            squareStyles={squareStyles}\n            lightSquareStyle={{ backgroundColor: \"Cornsilk\" }}\n            darkSquareStyle={{ backgroundColor: \"RoyalBlue\" }}\n            orientation={side}\n            />\n            <br/>\n            {admin &&\n              <div>\n                <FenBox fen={position} passFenUp={passFenUp}/>\n                <PerftUtil fen={position}/>\n              </div>\n            }\n          </div>\n        )}\n      </NormalGame>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <NormalGameBoard admin/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}